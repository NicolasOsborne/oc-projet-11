swagger: '2.0'
info:
  title: Argent Bank API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: User accounts
      description: API for fetching all accounts for a user
      produces:
        - application/json
      responses:
        '200':
          description: Accounts retrieved successfully
          schema:
            $ref: '#/definitions/AccountsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: All transactions for one of the user's accounts
      description: API for fetching all the transactions for an account based on its specific ID
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: Account's ID
      responses:
        '200':
          description: Account's transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Edit a transaction's category
      description: API for editing a transaction's category depending on the account's ID and the transaction's ID.
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: Account's ID
        - in: path
          name: transactionId
          required: true
          type: string
          description: Transaction's ID
        - in: body
          name: body
          description: Update transaction's category with a new value selected from the dropdown list
          required: true
          schema:
            $ref: '#/definitions/TransactionCategory'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction's category successfully updated
          schema:
            $ref: '#/definitions/TransactionCategoryResponse'
        '400':
          description: Invalid Field
        '401':
          description: Unauthorized
        '404':
          description: Account or transaction not found
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Add a note to a transaction
      description: API for adding a note to a transaction depending on the account's ID and the transaction's ID.
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: Account's ID
        - in: path
          name: transactionId
          required: true
          type: string
          description: Transaction's ID
        - in: body
          name: body
          description: Add a note to the transaction with the value of the text input
          required: true
          schema:
            $ref: '#/definitions/TransactionNote'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction's note successfully added
          schema:
            $ref: '#/definitions/TransactionNoteResponse'
        '400':
          description: Invalid Field
        '401':
          description: Unauthorized
        '404':
          description: Account or transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Edit a transaction's note
      description: API for editing a transaction's note depending on the account's ID and the transaction's ID.
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: Account's ID
        - in: path
          name: transactionId
          required: true
          type: string
          description: Transaction's ID
        - in: body
          name: body
          description: Update the transaction's note with the new value of the text input
          required: true
          schema:
            $ref: '#/definitions/TransactionNote'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction's note successfully updated
          schema:
            $ref: '#/definitions/TransactionNoteResponse'
        '400':
          description: Invalid Field
        '401':
          description: Unauthorized
        '404':
          description: Account or transaction not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Delete a transaction's note
      description: API for deleting a note from a transaction depending on the account's ID and the transaction's ID.
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: Account's ID
        - in: path
          name: transactionId
          required: true
          type: string
          description: Transaction's ID
      produces:
        - application/json
      responses:
        '200':
          description: Transaction's note successfully deleted
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              body:
                type: object
                properties:
                  note:
                    type: string
                    example: ''
        '401':
          description: Unauthorized
        '404':
          description: Account or transaction not found
        '500':
          description: Internal Server Error
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      accountId:
        type: string
      accountName:
        type: string
      accountBalance:
        type: number
  Transaction:
    type: object
    properties:
      transactionId:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      type:
        type: string
      category:
        type: string
      note:
        type: string
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
        enum:
          - Food
          - Bills & Utilities
          - Transportation
          - Shopping
          - Entertainment
          - Travel
          - Health & Wellness
          - Education
          - Charity & Donations
          - Investments
          - Withdrawals
          - Deposits
          - Transfers
          - Miscellaneous
        example: 'string'
  TransactionNote:
    type: object
    properties:
      note:
        type: string
  AccountsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          accounts:
            type: array
            items:
              $ref: '#/definitions/Account'
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/Transaction'
  TransactionCategoryResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/TransactionCategory'
  TransactionNoteResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/TransactionNote'
